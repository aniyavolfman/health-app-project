{"version":3,"file":"static/js/802.bcba2ec2.chunk.js","mappings":"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","sources":["components/DailyCaloriesForm/schema.js","webpack://health-app-project/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.scss?c79a","components/DailyCaloriesForm/DailyCaloriesForm.jsx","components/Loader/Loader.jsx","webpack://health-app-project/./src/components/RightSideBar/RightSideBar.module.scss?519c","components/RightSideBar/RightSideBar.jsx","webpack://health-app-project/./src/pages/CalculatorPage/CalculatorPage.module.scss?5abd","pages/CalculatorPage/CalculatorPage.jsx","redux/dailyRate/dailyRateSelectors.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n    height: yup.number()\n      .typeError('Значення має бути числом')\n    .min(120, 'Мінімальне значення 120 см')\n    .max(220, 'Максимальне значення 220 см')\n    .required('Поле обовʼязкове'),\n  age: yup.number()\n  .typeError('Значення має бути числом')\n  .min(18, 'Мінімальне значення 18')\n  .max(100, 'Максимальне значення 100')\n  .required('Поле обовʼязкове'),\n  weight: yup.number()\n  .typeError('Значення має бути числом')\n  .min(40, 'Мінімальне значення 40 кг')\n  .max(200, 'Максимальне значення 200 кг')\n  .required('Поле обовʼязкове'),\n  desiredWeight: yup.number()\n  .typeError('Значення має бути числом')\n  .min(40, 'Мінімальне значення 40 кг')\n  .max(200, 'Максимальне значення 200 кг')\n  .required('Поле обовʼязкове'),\n  bloodType: yup.mixed().oneOf(['1', '2', '3', '4'], 'Виберіть, будь ласка, групу крові').required('Поле обовʼязкове'),\n  })","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DailyCaloriesForm_wrapper__UC+Pd\",\"title\":\"DailyCaloriesForm_title__xqHqd\",\"form\":\"DailyCaloriesForm_form__9xqX8\",\"inputsWrapper\":\"DailyCaloriesForm_inputsWrapper__lRBFv\",\"inputsLeft\":\"DailyCaloriesForm_inputsLeft__4u9qD\",\"inputsRight\":\"DailyCaloriesForm_inputsRight__s1sc4\",\"input\":\"DailyCaloriesForm_input__og9jI\",\"inputError\":\"DailyCaloriesForm_inputError__oxuJ-\",\"error\":\"DailyCaloriesForm_error__lazcs\",\"radioWrapper\":\"DailyCaloriesForm_radioWrapper__7FwbA\",\"radioTitle\":\"DailyCaloriesForm_radioTitle__nBywI\",\"radioLabel\":\"DailyCaloriesForm_radioLabel__ePXBs\",\"radioInput\":\"DailyCaloriesForm_radioInput__WDH3+\",\"startBtn\":\"DailyCaloriesForm_startBtn__iCkxq\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { schema } from './schema';\n\nimport {\n  getAuthRecommendations,\n  getRecommendations,\n} from 'redux/dailyRate/dailyRateOperations';\nimport css from './DailyCaloriesForm.module.scss';\nimport { selectId, selectIsLoggedIn } from 'redux/auth/authSelectors';\n\nimport { useNavigate } from 'react-router-dom';\n\n\nexport const DailyCaloriesForm = ({ handleOpenModal }) => {\n  const dispatch = useDispatch();\n  const userId = useSelector(selectId);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  async function onSubmit(values, { resetForm }) {\n    values.bloodType = Number(values.bloodType);\n\n    if (!isLoggedIn) {\n      handleOpenModal();\n      dispatch(getRecommendations(values));\n    } else {\n      dispatch(getAuthRecommendations({ ...values, userId }));\n      setTimeout(()=>navigate('/diary', { replace: true }), 500);\n\n    }\n    resetForm();\n  }\n\n\n  return (\n    <div className={css.wrapper}>\n      <h2 className={css.title}>Розрахувати денну норму калорій</h2>\n\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          weight: '',\n          desiredWeight: '',\n          bloodType: 1,\n        }}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form className={css.form} noValidate>\n            <div className={css.inputsWrapper}>\n              <div className={css.inputsLeft}>\n                <div>\n                  <Field\n                    type=\"text\"\n                    name=\"height\"\n                    min=\"120\"\n                    max=\"220\"\n                    required\n                    placeholder=\"Зріст *\"\n                    className={\n                      errors.height && touched.height\n                        ? css.inputError\n                        : css.input\n                    }\n                  />\n                  {errors.height && touched.height && (\n                    <p className=\"error\">{errors.height}</p>\n                  )}\n                </div>\n                <div>\n                  <Field\n                    className={\n                      errors.age && touched.age ? css.inputError : css.input\n                    }\n                    type=\"text\"\n                    name=\"age\"\n                    min=\"18\"\n                    max=\"100\"\n                    placeholder=\"Вік *\"\n                    required\n                  />\n                  {errors.age && touched.age && (\n                    <p className=\"error\">{errors.age}</p>\n                  )}\n                </div>\n                <div>\n                  <Field\n                    className={\n                      errors.weight && touched.weight\n                        ? css.inputError\n                        : css.input\n                    }\n                    type=\"text\"\n                    name=\"weight\"\n                    min=\"40\"\n                    max=\"200\"\n                    placeholder=\"Вага *\"\n                    required\n                  />\n                  {errors.weight && touched.weight && (\n                    <p className=\"error\">{errors.weight}</p>\n                  )}\n                </div>\n              </div>\n              <div className={css.inputsRight}>\n                <div>\n                  <Field\n                    className={\n                      errors.desiredWeight && touched.desiredWeight\n                        ? css.inputError\n                        : css.input\n                    }\n                    type=\"text\"\n                    name=\"desiredWeight\"\n                    min=\"40\"\n                    max=\"200\"\n                    placeholder=\"Бажана вага *\"\n                    required\n                  />\n                  {errors.desiredWeight && touched.desiredWeight && (\n                    <p className=\"error\">{errors.desiredWeight}</p>\n                  )}\n                </div>\n                <div>\n                  <p className={css.radioTitle}>Група крові *</p>\n                  <div className={css.radioWrapper}>\n                    <label className={css.radioLabel}>\n                      <Field\n                        className={css.radioInput}\n                        type=\"radio\"\n                        name=\"bloodType\"\n                        value=\"1\"\n                        required\n                      />\n                      1\n                    </label>\n                    <label className={css.radioLabel}>\n                      <Field\n                        className={css.radioInput}\n                        type=\"radio\"\n                        name=\"bloodType\"\n                        value=\"2\"\n                        required\n                      />\n                      2\n                    </label>\n                    <label className={css.radioLabel}>\n                      <Field\n                        className={css.radioInput}\n                        type=\"radio\"\n                        name=\"bloodType\"\n                        value=\"3\"\n                        required\n                      />\n                      3\n                    </label>\n                    <label className={css.radioLabel}>\n                      <Field\n                        className={css.radioInput}\n                        type=\"radio\"\n                        name=\"bloodType\"\n                        value=\"4\"\n                        required\n                      />\n                      4\n                    </label>\n                  </div>\n                  {errors.bloodType && touched.bloodType && (\n                    <p className=\"error\">{errors.bloodType}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n\n            <button className={css.startBtn} type=\"submit\">\n              Розпочати схуднення\n            </button>\n\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Oval } from 'react-loader-spinner';\n\nexport function Loader () {\n  return (\n    <>\n     <div style={{position: 'fixed', top: 0, width: '100%', height: '100%', background: 'rgba(0,0,0, 0.5)', zIndex:'300'}}>\n\n      <Oval\n        height={80}\n        width={80}\n        color=\"#4fa94d\"\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={8}\n        strokeWidthSecondary={8}\n      />\n\n    </div>\n     </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SidebarSection\":\"RightSideBar_SidebarSection__P08Jz\",\"SidebarWrap\":\"RightSideBar_SidebarWrap__FDARx\",\"SidebarRecomend\":\"RightSideBar_SidebarRecomend__h8tJ-\",\"SidebarNotRecomend\":\"RightSideBar_SidebarNotRecomend__917sN\",\"SidebarTitle\":\"RightSideBar_SidebarTitle__wARuB\",\"SidebarText\":\"RightSideBar_SidebarText__551ES\",\"SidebarList\":\"RightSideBar_SidebarList__Taq3U\",\"SidebarItem\":\"RightSideBar_SidebarItem__Xcrl8\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './RightSideBar.module.scss';\nimport { nanoid } from 'nanoid';\n\nexport default function RightSideBar() {\n  const date = useSelector(state => state.products.currentDate);\n  const notAllowedProducts = useSelector(\n    state => state.auth.userData.notAllowedProducts\n  );\n  const summaries = useSelector(state => state.dailyRate.summaries);\n\n  const shortProducts = notAllowedProducts?.slice(0, 4);\n\n  return (\n    <div className={css.SidebarSection}>\n      <div className={css.SidebarWrap}>\n        <div className={css.SidebarRecomend}>\n          <h2 className={css.SidebarTitle}>Підсумок на {date}</h2>\n          <ul className={css.SidebarList}>\n            <li className={css.SidebarItem}>\n              <p className={css.SidebarText}>Залишилось</p>\n              <p className={css.SidebarText}>\n                {summaries?.kcalLeft.toFixed(2)} ккал\n              </p>\n            </li>\n            <li className={css.SidebarItem}>\n              <p className={css.SidebarText}>Спожито</p>\n              <p className={css.SidebarText}>\n                {summaries?.kcalConsumed.toFixed(2)} ккал\n              </p>\n            </li>\n            <li className={css.SidebarItem}>\n              <p className={css.SidebarText}>Денна норма</p>\n              <p className={css.SidebarText}>\n                {summaries?.dailyRate.toFixed(2)} ккал\n              </p>\n            </li>\n            <li className={css.SidebarItem}>\n              <p className={css.SidebarText}>% від норми</p>\n              <p className={css.SidebarText}>\n                {summaries?.percentsOfDailyRate.toFixed(2)} %\n              </p>\n            </li>\n          </ul>\n        </div>\n        <div className={css.SidebarNotRecomend}>\n          <h2 className={css.SidebarTitle}>Не рекомендовані продукти</h2>\n          {shortProducts?.length===0 && (\n            <p className={css.SidebarText}>Ваша дієта буде тут</p>\n          )}\n          <ul className={css.SidebarList}>\n            {shortProducts?.map(el => (\n              <li className={css.SidebarItem} key={nanoid()}>\n                <p className={css.SidebarText}>{el}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"calculatorPage\":\"CalculatorPage_calculatorPage__TGglj\"};","import { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\nimport { Loader } from 'components/Loader/Loader';\nimport RightSideBar from 'components/RightSideBar/RightSideBar';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectiIsLoadingUser } from 'redux/auth/authSelectors';\nimport { selectIsLoading } from 'redux/dailyRate/dailyRateSelectors';\nimport css from './CalculatorPage.module.scss';\nexport default function CalculatorPage() {\n\n  const isloading = useSelector(selectIsLoading);\n  const isLoadingUser = useSelector(selectiIsLoadingUser);\n\n  return (\n    <div className={css.calculatorPage}>\n     {(isloading || isLoadingUser) && <Loader />}\n      <DailyCaloriesForm />\n      <RightSideBar />\n    </div>\n  );\n}\n","export const selectNotAllowedProducts = state =>state.dailyRate.notAllowedProducts;\nexport const selectDailyCalories = state => state.dailyRate.dailyCalories;\nexport const selectIsLoading = state => state.dailyRate.isLoading;\nexport const selectError = state => state.dailyRate.error;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["schema","yup","shape","height","typeError","min","max","required","age","weight","desiredWeight","bloodType","oneOf","DailyCaloriesForm","_ref","handleOpenModal","dispatch","useDispatch","userId","useSelector","selectId","isLoggedIn","selectIsLoggedIn","navigate","useNavigate","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","resetForm","wrap","_context","prev","next","Number","getAuthRecommendations","_objectSpread","setTimeout","replace","getRecommendations","stop","apply","arguments","_jsxs","className","css","children","_jsx","Formik","initialValues","validationSchema","onSubmit","_x","_x2","_ref3","errors","touched","Form","noValidate","Field","type","name","placeholder","value","Loader","_Fragment","style","position","top","width","background","zIndex","Oval","color","wrapperStyle","left","transform","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","RightSideBar","date","state","products","currentDate","notAllowedProducts","auth","userData","summaries","dailyRate","shortProducts","slice","kcalLeft","toFixed","kcalConsumed","percentsOfDailyRate","length","map","el","nanoid","CalculatorPage","isloading","selectIsLoading","isLoadingUser","selectiIsLoadingUser","selectNotAllowedProducts","selectDailyCalories","dailyCalories","isLoading","selectError","error","size","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}